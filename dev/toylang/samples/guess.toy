(def ask
  (fn [question if-yes if-no]
    (io question
        (fn [response]
          (cond
            (= response "yes") (if-yes)
            (= respone "no") (if-no)
            true -1)))))

(def play
  (fn [db current-path]
    (let [get-in (fn [vec path]
                   (cond
                     (empty? path) vec
                     true (get-in (get vec (first path) (rest path)))))
          cur-db (get-in db current-path)]
    (cond
      (= 1 (count cur-db)) (ask (str "Is it a " (get db 0) "?")
                                (fn [] (io "I win!" (play db [])))
                                (fn [] (io "Aww. What is it then?"
                                           (fn [response]
                                             (io (str "Thanks. What yes/no question could I use to distinguish it from a " (get db 0) "?")
                                                 (play [question [response] db] []))))))
      (= 3 (cound cur-db)) (ask (get cur-db 0)
                                (fn [] (play db (conj path 1)))
                                (fn [] (play db (conj path 2))))
      true -1))))

(def main
  (fn [args]
    (cond
      (> 0 args) -1
      true (play ["cat"] []))))
